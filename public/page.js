// Generated by CoffeeScript 1.5.0
/*
# Author: Gautham Badhrinathan (gbadhrinathan@esri.com)
*/

var extend;

extend = function(obj, mixin) {
  var method, name;
  for (name in mixin) {
    method = mixin[name];
    obj[name] = method;
  }
  return obj;
};

require(["dojo/ready", "esri/map", "esri/geometry/Point", "esri/symbols/SimpleMarkerSymbol", "esri/symbols/SimpleLineSymbol", "dojo/_base/Color", "esri/graphic", "dojo/_base/connect", "esri/layers/FeatureLayer", "esri/tasks/query", "dojo/request", "dojo/parser", "dijit/layout/BorderContainer", "dijit/layout/ContentPane", "dijit/TitlePane", "esri/dijit/Attribution"], function(ready, Map, Point, SimpleMarkerSymbol, SimpleLineSymbol, Color, Graphic, connect, FeatureLayer, Query, request) {
  return ready(function() {
    var map;
    map = new Map("map", {
      center: [-56.049, 38.485],
      zoom: 3,
      basemap: "streets"
    });
    return connect.connect(map, "onLoad", function() {
      var fl;
      fl = new FeatureLayer("http://lamborghini:6080/arcgis/rest/services/l7_rowpath/MapServer/0");
      return connect.connect(fl, "onLoad", function() {
        var gfx;
        gfx = null;
        return setInterval(function() {
          return request.get("/l7/getRowPath", {
            handleAs: "json"
          }).then(function(_arg) {
            var path, row;
            row = _arg.row, path = _arg.path;
            return fl.queryFeatures(extend(new Query, {
              where: "row = " + row + " and path = " + path
            }), function(_arg1) {
              var feature, sbl;
              feature = _arg1.features[0];
              sbl = new SimpleMarkerSymbol(SimpleMarkerSymbol.STYLE_CIRCLE, 20, new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, new Color([200, 50, 50]), 4), new Color([200, 200, 50, 0.6]));
              if (gfx != null) {
                return gfx.setGeometry(feature.geometry.getExtent().getCenter());
              } else {
                map.centerAndZoom(feature.geometry.getExtent().getCenter(), 3);
                gfx = new Graphic(feature.geometry.getExtent().getCenter(), sbl);
                return map.graphics.add(gfx);
              }
            }, function(error) {
              return console.error(error);
            });
          });
        }, 1000)();
      });
    });
  });
});
